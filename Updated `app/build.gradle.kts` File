plugins {
    alias(libs.plugins.com.android.application)
    alias(libs.plugins.org.jetbrains.kotlin.android)
    alias(libs.plugins.ksp)
    alias(libs.plugins.hilt)
    alias(libs.plugins.kapt)
}

android {
    namespace = "com.ziemowit.ts.trivia"
    compileSdk = 35

    defaultConfig {
        applicationId = "com.ziemowit.ts.trivia"
        minSdk = 24
        targetSdk = 35
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
}

dependencies {
    implementation(libs.core.ktx)
    implementation(libs.appcompat)
    implementation(libs.material)
    implementation(libs.constraintlayout)
    implementation(libs.lifecycle.runtime.ktx)
    implementation(libs.activity.compose)
    implementation(libs.compose.ui)
    implementation(libs.compose.material)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.material3)
    implementation(libs.compose.runtime.livedata)
    implementation(libs.compose.navigation)
    implementation(libs.compose.hilt.navigation)
    implementation(libs.compose.foundation)
    implementation(libs.compose.material.icons.extended)
    implementation(libs.compose.ui.tooling)
    implementation(libs.compose.ui.test.junit4)
    implementation(libs.compose.ui.test.manifest)
    implementation(libs.compose.runtime)
    implementation(libs.compose.ui.util)
    implementation(libs.compose.animation.graphics)
    implementation(libs.compose.animation.core)
    implementation(libs.compose.ui.text)
    implementation(libs.compose.ui.text.android)
    implementation(libs.compose.ui.unit)
    implementation(libs.compose.runtime.rxjava2)
    implementation(libs.compose.runtime.savedinstance)
    implementation(libs.compose.ui.viewinterop)
    implementation(libs.compose.ui.platform)
    implementation(libs.compose.ui.graphics)
    implementation(libs.compose.ui.layout)
    implementation(libs.compose.ui.foundation)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.ui.tooling.preview)
}

androidComponents {
    onVariants(selector().all()) { variant ->
        afterEvaluate {
            val capName = variant.name.replaceFirstChar { if (it.isLowerCase()) it.titlecase(Locale.getDefault()) else it.toString() }
            tasks.getByName<KotlinCompile>("ksp${capName}Kotlin") {
                setSource(tasks.getByName("generate${capName}DatabaseInterface").outputs)
            }
        }
    }
}
